{{trans_default_domain("doc")}}

<a href="https://github.com/nodefony/nodefony"><img style="position: fixed; top: 51px; right: 0; border: 0;z-index:8000" src="https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png" alt="Fork me on GitHub"></a>


<div class="page-header">
  <h1>{{ "Makefile Nodefony" | trans() }} </h1>
</div>


<h2>BUILD NODEFONY FRAMEWORK </h2>

<h3>Build All</h3>

<div class="doc3">
<pre>
$ make 
</pre>
</div>



<h3>Makefile build differents part of framework :</h3>

<div class="doc3">
<pre>
$ make << target >>
</pre>
</div>

<h2>Targets NODEFONY FRAMEWORK </h2>

<h3> All </h3>
<div class="doc3">
	<p>
		Must be call the first time   ( generally after clone repo )</br>
		If you want Makefile be verbose on dependencies npm install  open Makefile and set VERBOSE = 1 
		<ul>
			<li>Build all sources of NODEFONY framework</li>
		</ul>
	</p>
	<p>
	   
	</p>
	<pre>
all: framework npm  install
	</pre>
</div>


<h3> framework </h3>
<div class="doc3">
	<p>
		Must be call the first time   ( generally call by 'all' taget )
	  
		<ul>
			<li>Build directories framework</li>
		</ul>
	</p>
	<pre>
framework:
	echo "###########  CREATE FRAMEWORK REPOSITORY ###########" ;
	@if [ ! -d tmp ] ; then  \
		mkdir tmp ;\
	fi
	@if [ ! -d tmp/upload ] ; then  \
		mkdir tmp/upload ;\
	fi
	@if [ ! -d bin ] ; then  \
		mkdir bin ;\
	fi
	@if [ ! -d web ] ; then  \
		mkdir web ;\
	fi
	@if [ ! -d web/js ] ; then  \
		mkdir web/js ;\
	fi
	@if [ ! -d web/css ] ; then  \
		mkdir web/css ;\
	fi
	@if [ ! -d web/images ] ; then  \
		mkdir web/images ;\
	fi
	@if [ ! -d web/assets ] ; then  \
		mkdir  web/assets ;\
	fi
	@if [ ! -d web/assets/js ] ; then  \
		mkdir web/assets/js ;\
	fi
	@if [ ! -d web/assets/css ] ; then  \
		mkdir web/assets/css ;\
	fi
	@if [ ! -d web/assets/images ] ; then  \
		mkdir web/assets/images ;\
	fi
	@if [ ! -d web/vendors ] ; then  \
		mkdir web/vendors ;\
		cd web/vendors ;\
		ln -s ../../src/stage stage ;\
		cd ../.. ;\
	fi
	</pre>
</div>



<h3>  npm   </h3>
<div class="doc3">
	<p>
		Must be call when you add dependency in package.json FRAMEWORK
		<ul>
			<li>Manage node.js dependencies  FRAMEWORK package.json</li>
		</ul>
		 
	</p>

	<pre>
npm:
	@if [  -f package.json  ] ; then  \
		echo "###########  NODE JS  MODULES  INSTALLATION  ###########" ;\
		if [ $(VERBOSE) = 0 ] ; then \
			npm -s install  ;\
		else \
			npm -ddd install  ;\
		fi \
	fi
	</pre>
</div>


<h3 name="install" id="install">  install </h3>
<div class="doc3">
	<p>
		Must be call when you add bundle in appKernel.js <br>
		Must be call when you add dependency in package.json bundle
		<ul>
			<li>Manage node.js dependencies BUNDLE package.json of all bundles registred in appKernel.js</li>
			<li>Manage assetics </li>
			<li>Manage databases </li>
		</ul>
		     
	</p>
	<pre>
install:
	./console npm:install
	make asset
	make sequelize
	./console router:generate:routes
	./console npm:list
	</pre>
</div>


<h3 name="asset" id="asset"> asset </h3>
<div class="doc3">
	<p>
		Must be call before run nodefony in production mode 
		<ul>
			<li>Intall symlink in web directory ( directory Ressources/public of each  bundles registred )   </li>
			<li>Complile all templates registred by kernel and dump result in assets directory in each bundle </li>
		</ul>
	</p>
	<pre>
asset:
	./console assets:install 
	./console assets:dump 
	</pre>
</div>



<h3> clean </h3>
<div class="doc3">
	<p>
		Must be call  when you want update nodefony
		<ul>
			<li>Clean  node.js all dependencies  FRAMEWORK package.json (empty node_modules directoty)</li>
			<li>Clean web public </li>
			<li>Clean temporary files  </li>
			<li>Rebuild  FRAMEWORK </li>
		</ul>
	</p>
	<pre>
clean:
	@if [ -e  node_modules ] ; then \
		echo "###########  CLEAN  NODE MODULES ###########" ;\
		rm -rf node_modules/* ; \
	fi
	@if [ -e  tmp ] ; then \
		echo "###########  CLEAN  TEMPORARY  ###########" ;\
		rm -rf tmp/* ; \
	fi
	@if [ -e  web ] ; then \
		echo "###########  CLEAN  WEB PUBLIC DIRECTOY  ###########" ;\
		rm -rf web/* ; \
	fi
	make framework

	</pre>
</div>


<h3> sequelize </h3>
<div class="doc3">
	<p>
		Must be call before run nodefony (developpement or prodution)  </br>
		Generally call by 'all' taget 
		<ul>
			<li>Generate ORM databases and entities of all bundles registred </li>
			<li>Generate fixtures of all bundles registred </li>
		</ul>
	</p>
	<pre>
sequelize:
	./console Sequelize:generate:entities
	./console Sequelize:fixtures:load 
	</pre>
</div>





<h2>Targets PM2 MANAGEMENT PRODUCTION </h2>

<h3>  start </h3>
<div class="doc3">
	<p>
		RUN NODEFONY IN PRODUTION MODE  </br>
		<ul>
			<li>Build all Assets and compile templates views </li>
			<li>RUN nodefony in prodution mode see <a href="{{ path('documentation-section',{section:'configurations', version:version, bundle:bundle, queryString:{'subsection':'framework'} })}}#pm2">Configuration PM2</a>  </li>
		</ul>
	</p>

	<pre>
start:
	make asset
	./nodefony_pm2 &
	</pre>
</div>


<h3>  stop   </h3>
<div class="doc3">
<p>
		STOP NODEFONY IN PRODUTION MODE  </br>
		<ul>
			<li>STOP All clusters </li>
		</ul>
	</p>

	<pre>
stop:
	./node_modules/pm2/bin/pm2 stop nodefony

	</pre>
</div>


<h3> Targets : kill startup show monit</h3>
<div class="doc3">
	<p>
		PM2 MANAGEMENT see <a href="http://pm2.keymetrics.io/docs/usage/quick-start/#cheatsheet/">documentation</a>   </br>
	</p>	
	<pre>
startup:
	./node_modules/pm2/bin/pm2 startup

kill:
	./node_modules/pm2/bin/pm2 kill

show:
	./node_modules/pm2/bin/pm2 show nodefony

monit:
	./node_modules/pm2/bin/pm2 monit nodefony

status:
	./node_modules/pm2/bin/pm2 status

reload:
	./node_modules/pm2/bin/pm2 reload all

restart:
	./node_modules/pm2/bin/pm2 restart all

	</pre>
</div>

