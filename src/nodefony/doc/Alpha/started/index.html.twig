{{trans_default_domain("doc")}}



<h1> {{ "begin" | trans() }}</h1>
<hr>


<h3>NODEFONY INSTALLATION : See more<span> <a href="{{ path('documentation-section',{section:'', version:version, bundle:bundle })}}">( Nodefony installation  documentation ) </a> </span> </h3>

<pre>

$ git clone https://github.com/ccamensuli/nodefony.git

$ cd nodefony

$ make


###########  CREATE web directory ###########

###########  NODE JS  MODULES  INSTALLATION  ###########
./console npm:install
              _   _    ___    ____    _____   _____    ___    _   _  __   __
             | \ | |  / _ \  |  _ \  | ____| |  ___|  / _ \  | \ | | \ \ / /
             |  \| | | | | | | | | | |  _|   | |_    | | | | |  \| |  \ V / 
             | |\  | | |_| | | |_| | | |___  |  _|   | |_| | | |\  |   | |  
             |_| \_|  \___/  |____/  |_____| |_|      \___/  |_| \_|   |_|  
                                                                            

		      NODEFONY CONSOLE CLUSTER MASTER Version : Alpha PLATFORM : darwin  PROCESS PID : 17679

INSTALL BUNDLE http dependence : memcached
INSTALL BUNDLE http dependence : qs
INSTALL BUNDLE assetic dependence : less
INSTALL BUNDLE assetic dependence : uglify-js
INSTALL BUNDLE assetic dependence : uglifycss
INSTALL BUNDLE monitoring dependence : request
INSTALL BUNDLE sequelize dependence : sequelize
INSTALL BUNDLE webRtc dependence : webrtc-adapter
INSTALL BUNDLE webRtc dependence : redis
⸨░░░░░░░░░░░░░░░░░░⸩ ⠧ normalizeTree: sill install loadCurrentTree

...

</pre>



<h3>Configuration system : </h3>

Add host name "nodefony.com" in your /etc/hosts  :
<pre>
$ sudo vim /etc/hosts


##
# Host Database
#
##
127.0.0.1       localhost nodefony.com
</pre>


<h3>Running NODEFONY: <span>See more  <a href="{{ path('documentation-section',{section:'Running', version:version, bundle:bundle })}}">( RUN Nodefony documentation ) </a></span> </h3>

<p>
	There are 3 methods to run NODEFONY framework 

	<ul>	
		<li>  Run Appliation in DEV  mode</li>
		<li>  Run Appliation in PROD mode with (clusters) </li>
		<li>  Run Appliation in PM2  mode see  <a href="http://pm2.keymetrics.io/">PM2</a> </li>
	</ul>
	To check the good binding http(s) you can run nodefony in dev mode 
</p>


<pre>

# Run Appliation in DEV mode

$ ./nodefony_dev
              _   _    ___    ____    _____   _____    ___    _   _  __   __
             | \ | |  / _ \  |  _ \  | ____| |  ___|  / _ \  | \ | | \ \ / /
             |  \| | | | | | | | | | |  _|   | |_    | | | | |  \| |  \ V / 
             | |\  | | |_| | | |_| | | |___  |  _|   | |_| | | |\  |   | |  
             |_| \_|  \___/  |____/  |_____| |_|      \___/  |_| \_|   |_|  
                                                                            

		      NODEFONY SERVER CLUSTER MASTER Version : Alpha PLATFORM : darwin  PROCESS PID : 17656

Wed Sep 28 2016 16:04:34 DEBUG AUTOLOADER LOAD  : /Users/cci/repository/nodefony/src/nodefony/bundles/httpBundle/httpBundle.js
Wed Sep 28 2016 16:04:34 DEBUG KERNEL  :  REGISTER BUNDLE : http   
Wed Sep 28 2016 16:04:34 DEBUG AUTOLOADER LOAD  : /Users/cci/repository/nodefony/src/nodefony/bundles/httpBundle/services/kernel/httpKernelService.js
Wed Sep 28 2016 16:04:34 DEBUG AUTOLOADER LOAD  : /Users/cci/repository/nodefony/src/nodefony/bundles/httpBundle/services/servers/httpService.js
Wed Sep 28 2016 16:04:34 DEBUG AUTOLOADER LOAD  : /Users/cci/repository/nodefony/src/nodefony/bundles/httpBundle/services/servers/httpsService.js
Wed Sep 28 2016 16:04:34 DEBUG AUTOLOADER LOAD  : /Users/cci/repository/nodefony/src/nodefony/bundles/httpBundle/services/servers/webSocketSecureService.js
Wed Sep 28 2016 16:04:34 DEBUG AUTOLOADER LOAD  : /Users/cci/repository/nodefony/src/nodefony/bundles/httpBundle/services/servers/websocketService.js
Wed Sep 28 2016 16:04:34 DEBUG AUTOLOADER LOAD  : /Users/cci/repository/nodefony/src/nodefony/bundles/httpBundle/services/sessions/sessionsService.js
Wed Sep 28 2016 16:04:34 DEBUG AUTOLOADER LOAD  : /Users/cci/repository/nodefony/src/nodefony/bundles/httpBundle/services/staticFiles/staticService.js
Wed Sep 28 2016 16:04:34 DEBUG AUTOLOADER LOAD  : /Users/cci/repository/nodefony/src/nodefony/bundles/httpBundle/services/upload/uploadService.js
Wed Sep 28 2016 16:04:34 DEBUG SERVICE KERNEL READER  : CONFIG LOAD FILE :/Users/cci/repository/nodefony/src/nodefony/bundles/httpBundle/Resources/config/config.yml
Wed Sep 28 2016 16:04:34 DEBUG SERVICE KERNEL READER  : SERVICE LOAD FILE :/Users/cci/repository/nodefony/src/nodefony/bundles/httpBundle/Resources/config/services.xml
Wed Sep 28 2016 16:04:34 DEBUG SERVICE INJECTION  : START SERVICE serverStatic( container,options )
Wed Sep 28 2016 16:04:34 DEBUG SERVICE INJECTION  : START SERVICE httpKernel( container,serverStatic )
Wed Sep 28 2016 16:04:34 DEBUG SERVICE INJECTION  : START SERVICE httpServer( httpKernel,security,options )
Wed Sep 28 2016 16:04:34 DEBUG SERVICE INJECTION  : START SERVICE httpsServer( httpKernel,security,options )
Wed Sep 28 2016 16:04:34 DEBUG SERVICE INJECTION  : START SERVICE websocketServer( httpKernel,security,options )
Wed Sep 28 2016 16:04:34 DEBUG SERVICE INJECTION  : START SERVICE websocketServerSecure( httpKernel,security,options )
Wed Sep 28 2016 16:04:34 DEBUG SERVICE INJECTION  : START SERVICE sessions( security,httpKernel )
Wed Sep 28 2016 16:04:34 DEBUG SERVICE INJECTION  : START SERVICE upload( httpKernel )

....

</pre>

<p>
	Access to App with URL : <strong>http://nodefony.com:5151</strong><br>

	By default the nodefony clone come with a demonstration bundle named "demoBundle" 

</p>




<h3>Configuration Framework : <span>See more  <a href="{{ path('documentation-section',{section:'Configurations', version:version, bundle:bundle })}}">( Nodefony Configurations  documentation ) </a></span> </h3>

