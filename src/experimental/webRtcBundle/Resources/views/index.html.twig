{% extends "/vendors/nodefony/bundles/frameworkBundle/Resources/views/layout.html.twig" %}


{% block stylesheets %}

	{{parent()}}
	<!--link href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet"-->
	<link href="/webRtcBundle/css/font-awesome.min.css" rel="stylesheet">
	<link href="/webRtcBundle/css/lobster.css" rel="stylesheet">
	<!--link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'-->
	
	<link rel="stylesheet" href="//code.jquery.com/ui/1.10.4/themes/smoothness/jquery-ui.css">
	<link rel="stylesheet" href="/vendors/stage/ui/themes/ui.all.css">
	<link rel="stylesheet" href="/vendors/stage/ui/themes/default/panel.css">
	<link rel="stylesheet" href="/webRtcBundle/css/webrtc.css">

	<style type="text/css">
		
		#canvas ,#canvas2{
			background-color:white
		}

	</style>

{% endblock %}


{% block javascripts %}

	{{parent()}}
	<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.3/jquery-ui.min.js"></script>

	<script type="text/javascript" src="/vendors/stage/io/io.js"></script>
	<script type="text/javascript" src="/vendors/stage/io/transports/websockets/websocket.js"></script>
	<script type="text/javascript" src="/vendors/stage/crypto/base64.js"></script>
	<script type="text/javascript" src="/vendors/stage/crypto/md5.js"></script>
	<script type="text/javascript" src="/vendors/stage/io/authentication/mechanisms/digest-md5/digestMd5.js"></script>
	<script type="text/javascript" src="/vendors/stage/io/authentication/sasl/sasl.js"></script>
	<script type="text/javascript" src="/vendors/stage/io/protocols/bayeux/bayeux.js"></script>
	<script type="text/javascript" src="/vendors/stage/io/realtime/realtime.js"></script>
	<script type="text/javascript" src="/vendors/stage/io/protocols/sip/sip.js"></script>
	<script type="text/javascript" src="/vendors/stage/media/media.js"></script>
	<script type="text/javascript" src="/vendors/stage/webrtc/webrtc.js"></script>


	<!-- UI -->
	<script type="text/javascript" src="/vendors/stage/ui/ui.js"></script>
	<script type="text/javascript" src="/vendors/stage/ui/color.js"></script>
	<script type="text/javascript" src="/webRtcBundle/js/popup.js"></script>
	<script type="text/javascript" src="/vendors/stage/ui/plugins/container/container.js"></script>
	<script type="text/javascript" src="/vendors/stage/ui/plugins/panel/panel.js"></script>


	<script>

		var settingsSyslog = {
			moduleName:"REALTIME",
			defaultSeverity:"INFO"
		};

	var mediaSetting = {
		containerUserSpace:null,
		containerRemoteSpace:null,
		chat:true
	};

	var mediaView = function(  settings){
		this.settings = $.extend({},mediaSetting, settings);
		this.createUserSpace();
		this.createRemoteSpace();
		this.users = {};
		this.syslog = new stage.syslog(settingsSyslog);
	};

	mediaView.prototype.logger = function(){
		return this.syslog.apply(this.syslog, arguments);
	};

	mediaView.prototype.setName = function(){
		this.media.attr("id", this.name);
	};

	mediaView.prototype.mute = function(media, mute, audiotracks){
		if (! media ) media = this.mediaElement ;
		media.muted = mute;
		if (audiotracks && audiotracks.length){
			for (var i = 0 ; i < audiotracks.length; i++){
				audiotracks[i].muted = mute 
					audiotracks[i].enabled =  ! mute 
			}
		}
	};


	mediaView.prototype.createUserSpace = function(){
		var row = $(document.createElement("div"));
		row.addClass("row");
		this.rowUser = row ;
		this.settings.containerUserSpace.append(row);
		this.videoSpace = $(document.createElement("div"));
		this.videoSpace.addClass("video-container col-md-12 col-xs-8 col-centered");	
		row.append(this.videoSpace);
		if (this.settings.chat){
			this.addChatSpace(row)	
		}
	};		

	mediaView.prototype.AddUserMedia = function(type, name, mediaStream){
		this.name = name;
		this.nbTrackVideo =  mediaStream.videotracks.length ;
		this.nbTrackAudio =  mediaStream.audiotracks.length ;
		

		switch (this.nbTrackVideo){
			case 0 :
				if (this.nbTrackAudio){
					
					var ico = $(document.createElement("span"));
					ico.addClass("fa fa-headphones");
					this.videoSpace.append(ico);
					this.media = this.buildAudio();
					this.videoSpace.append(this.media);
					this.mediaElement =  this.media.get(0);
					this.setName(name);
				}
			break;
			default:
				this.media = this.buildVideo();
				this.videoSpace.append(this.media);	
				this.mediaElement =  this.media.get(0);				
				this.mediaElement.volume = 0.0 ;
				this.mediaElement.muted = false ;
				this.setName(name);
			break;
		};
		
		this.buildControls(name, null, this.videoSpace, null, mediaStream);
		
		if (this.settings.chat){
			this.addUserChat(name)	
		}
		return this.mediaElement
	};

	mediaView.prototype.addChatSpace = function(){

		var title= $(document.createElement("div"));
		title.attr("id", "discussion-title");
		title.addClass("col-md-10 col-xs-8 col-centered");
		title.text("Participants");
		this.rowUser.append(title)			

			this.box = $(document.createElement("div"));
		this.box.attr("id","discussion" );
		this.box.addClass("col-md-10 col-xs-8 col-centered");

		this.rowUser.append(this.box);


	};

	mediaView.prototype.addUserChat = function(name){
		var part = $(document.createElement("div"));
		part.text(name);
		this.box.append(part);
	};


	mediaView.prototype.createRemoteSpace = function(){
		this.remoteSpace = this.settings.containerRemoteSpace ; 
		this.rowRemote = $(document.createElement("div"));
		this.rowRemote.addClass("row");
		this.remoteSpace.append(this.rowRemote);

	};

	mediaView.prototype.removeRemoteMedia = function(user){
		if (user in this.users){
			this.users[user].remove();
			delete this.users[user];
		}
	};

	mediaView.prototype.AddRemoteMedia = function(remoteStream,  transaction){
		this.nbTrackVideo =  remoteStream.videotracks.length ;
		this.nbTrackAudio =  remoteStream.audiotracks.length ;

		switch (this.nbTrackVideo){
			case 0 :
				if (this.nbTrackAudio){
					
					var ele = $(document.createElement("div"));
					var ico = $(document.createElement("span"));
					ico.addClass("fa fa-headphones");
					ele.append(ico);
					var media = this.buildAudio();	
					ele.append(media);
					ele.addClass("audio-container col-md-6 col-xs-8 col-centered");
					
					this.remoteSpace.append(ele);
					this.users[transaction.to.name] = ele ;
				}
				break;
			default:
				var media = this.buildVideo();	
				var ele = $(document.createElement("div"));
				ele.append(media);
				ele.addClass("video-container col-md-6 col-xs-8 col-centered");
				this.remoteSpace.append(ele);
				this.users[transaction.to.name] = ele ;
				break;
		};
		
		this.buildControls(transaction.to.name, transaction, ele,  media.get(0), remoteStream);

		if (this.settings.chat){
			this.addUserChat(transaction.to.name)	
		}
		return media.get(0);

	};

	mediaView.prototype.buildControls = function(name, transaction, container, media , mediaStream ){

		var vidControls = $(document.createElement('span')).addClass('video-controls');
		container.append(vidControls);
		var stack = $(document.createElement('span')).addClass('control-button fa-stack fa-3x');
		stack.append($(document.createElement('i')).addClass('fa fa-circle-thin fa-stack-2x'));
		stack.append($(document.createElement('i')).addClass('fa fa-microphone fa-stack-1x'));
		vidControls.append(stack);
		stack.click(function(event){
			$(event.currentTarget).find('.fa-microphone').toggleClass('fa-microphone-slash');
			var mute = $(event.currentTarget).find('.fa-microphone').hasClass('fa-microphone-slash');
			this.mute(media, mute, mediaStream.audiotracks);
		}.bind(this));

		var text = $(document.createElement('span')).addClass('controls-identity').text(name);
		vidControls.append(text);

		var stack = $(document.createElement('span')).addClass('control-button fa-stack fa-3x');
		stack.append($(document.createElement('i')).addClass('fa fa-circle-thin fa-stack-2x'));
		stack.append($(document.createElement('i')).addClass('fa fa-phone fa-stack-1x'));
		vidControls.append(stack);
		stack.click(function(){
			if(transaction) transaction.by(transaction.callId);
		});

		vidControls.hide();

		container.mouseover(function(){
			vidControls.show();
		});

		container.mouseout(function(){
			vidControls.hide();
		});

		return vidControls;
	};



	mediaView.prototype.buildVideo = function(){
		var media =  $(document.createElement("video"));
		media.addClass("video img img-responsive");
		media.attr("controls",false)
			media.get(0).onvolumechange = function(event){
				//console.log(this.volume)
			};
		return media ; 

	};

	mediaView.prototype.buildAudio = function(){
		var media =  $(document.createElement("audio"));
		media.addClass("audio img img-responsive");
		return media ;
	};


	var webRTC = null;
	var mv = null;
	
		var drawSpectrum = function(canvas, myAudioAnalyser) {
            		var ctx = canvas.getContext('2d');
            		var width = canvas.width;
            		var height = canvas.height;
            		var bar_width = 10;
            		ctx.clearRect(0, 0, width, height);
            		var freqByteData = new Uint8Array(myAudioAnalyser.frequencyBinCount);
			//console.log(freqByteData)
            		myAudioAnalyser.getByteFrequencyData(freqByteData);
            		var barCount = Math.round(width / bar_width);
            		for (var i = 0; i < barCount; i++) {
                		var magnitude = freqByteData[i];
                		// some values need adjusting to fit on the canvas
                		ctx.fillRect(bar_width * i, height, bar_width - 2, -magnitude + 60);
            		}
        	};	

		$( document ).ready(function(){
			
			var userName = $("#userName").html();

			var select = $("#bt").bind("click",function(event){
				var user = $("#invite").val();
				webRTC.createOffer(user)
			});

			$('#invite').keypress(function(e){
				if (e.which == 13) {
					var user = $("#invite").val();
					webRTC.createOffer(user);
					return false;
				}
			});



			var webRTC = null;
			mv = new mediaView({
				containerUserSpace:$("#myDiv"),
				containerRemoteSpace:$("#remoteDiv")
			});


			var mix = new stage.media.mediaMix();
			//console.log(mix);

			
			var url = "nodefony.com:5151/webrtc/3000" ;
			webRTC = new stage.webRtc(url, null,{
				protocol:"natif",	
				onRegister:function(user, webrtc){
					//console.log(user)
					stage.ui.log("register User "+user.name)
					user.mediaStream.getUserMedia({
						audio:true,
						video:true
					},function(mediaStream){
						//console.log(mediaStream)
						var vid = mv.AddUserMedia("video", user.name, mediaStream);
						mediaStream.attachMediaStream(vid);
					
						var track2 = mix.createTrack(mediaStream,{
							filter		: false,
							panner		: false,
							analyser	: true,
							onReady		:function(media){
								media.play();
								var intervalSpectrumId = setInterval(function(){
									drawSpectrum($('#canvas').get(0) ,media.analyser);
								}, 30);
							}	
						});

					})
				},
				
				onOffer:function(message, user, transac){
					
					stage.ui.Confirm("APPEL ENTRANT","call from :"+message.fromName,function(cancel, accept){
						if (cancel){
							//TODO DECLINED
							message.transaction.createResponse(603, "Declined");
							message.transaction.sendResponse();
						}
						if (accept){
							transac.setRemoteDescription("offer", user, message.rawBody, message.dialog);
						}
					})
				},
				onRemoteStream:function(event, remoteStream/*.urlStream*/, webRtc){
					var vid = mv.AddRemoteMedia(remoteStream, {to:{name:""}});
					remoteStream.attachMediaStream(vid);
					var track = mix.createTrack(remoteStream,{
						filter		: false,
						panner		: false,
						analyser	: true,
						onReady		:function(media){
							media.play();
							var intervalSpectrumId = setInterval(function(){
								drawSpectrum($('#canvas2').get(0) ,media.analyser);
							}, 30);
						}	
					});					

				}
			});
			webRTC.register( userName, "1234");


		});
	</script>


{% endblock %}


{% block bodyContent %}
	<p id="userName" value="{{ userName }}" style="display:none">{{ userName }}</p>

	<div class="container" style="background-color: #244558;margin-top:50px">
		<div class="row row-centered">
			<label id="invite-label" class="col-md-10 col-xs-10 col-centered">
				<input id='invite' type="text" name="s" value="" placeholder="Compose ton numéro" style="color: black;" class="col-md-9 col-xs-12 col-centered">
				<input type="button" id='bt' class="col-md-3 col-xs-6 col-centered" value="Appeler" />
			</label>
		</div>
		<div class="row row-centered">
			<div id="remoteDiv" class="col-md-8 col-xs-12 row-centered">
			</div>
			<div id="myDiv" class="col-md-4 col-xs-12 row-centered">
				
			</div>
		</div>
	</div>

	<span id="signature">Design by nodefony ©</span>
	<canvas width="300" height="200" id="canvas" style="top:350px;position:absolute"></canvas>
	<canvas width="300" height="200" id="canvas2" style="top:350px;position:absolute"></canvas>

{% endblock %}


