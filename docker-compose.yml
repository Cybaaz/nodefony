version: '2.1'

services:
  nodefony:
    container_name: nodefony
    build: "./docker/nodefony"
    volumes:
      - "./docker/nodefony:/docker:rw"
      - "statics-files:/nodefony/web:rw"
      - "certificates:/nodefony/config/certificates:rw"
      - "nodefony:/nodefony"
    networks:
      nodefony:
        aliases:
         - docker.nodefony
    ports:
      - 5151 
      - 5152
    working_dir: "/nodefony"
    depends_on:
      db:
        condition: service_started
      nginx:
        condition: service_started
    entrypoint:  "/docker/entrypoint.sh"
    links:
      - "db:docker.nodefony.db"
      - "nginx:docker.nodefony.nginx"

# DATABASE
  db:
    container_name: mariadb
    image: mariadb
    command: mysqld --innodb-buffer-pool-size=20M
    volumes:
      - "db:/var/lib/mysql:rw"
    networks:
      nodefony:
        aliases:
         - docker.nodefony.db
    environment:
      - "MYSQL_DATABASE=nodefony"
      - "MYSQL_USER=nodefony"
      - "MYSQL_PASSWORD=nodefony"
      - "MYSQL_ROOT_PASSWORD=nodefony"
    ports:
      - "3351:3306"

# NGINX
  nginx:
    container_name: nginx
    image: nginx
    volumes:
      - "./docker/nginx/nodefony.conf:/etc/nginx/conf.d/default.conf"
      - "statics-files:/web"
      - "certificates:/certificates"
      - "nodefony:/nodefony"
    networks:
       nodefony:
        aliases:
         - docker.nodefony.nginx
    ports:
      - "8181:80"
      - "8282:443"

# VOLUMES 
volumes:
  statics-files: 
    driver: local
  certificates:
    driver: local
  nodefony:
    driver: local
  db: 
    driver: local

# NETWORK
networks:
  nodefony: 
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.51.51.0/24
